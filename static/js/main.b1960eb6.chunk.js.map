{"version":3,"sources":["components/utils/utils.jsx","components/Navigation/index.jsx","components/Footer/index.jsx","components/utils/notification.jsx","components/Register/index.jsx","components/Landing/cards.jsx","components/Landing/index.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["AppBar","props","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","NavBar","className","cursor","onClick","history","push","Button","default","label","React","Component","withRouter","Media","gap","Anchor","a11yTitle","href","icon","Instagram","color","FacebookOption","Twitter","Social","Footer","textAlign","size","Text","alignSelf","fontFamily","Notification","useState","open","setOpen","onClose","undefined","setNotification","Layer","position","modal","margin","horizontal","onEsc","responsive","plain","round","StatusGood","message","FormClose","customTheme","deepMerge","grommet","global","colors","font","family","height","tab","active","hover","border","side","extend","theme","css","GeneralHistory","defaultValue","name","email","sex","comorbities","age","smoking","value","setValue","fill","width","Form","onChange","nextValue","onReset","onSubmit","event","console","log","touched","nextIndex","FormField","TextInput","required","MaskedInput","mask","regexp","placeholder","fixed","Select","options","type","TextArea","top","primary","Vitals","temperature","pulse","resprirationRate","breathingPattern","bloodPressure","SystemicHistory","cough","sputumConsistency","sputumAmount","sputumColor","sputumSmell","sputumPostural","blessOnset","blessDuration","blessSeverity","blessVariation","chestSite","chestOnset","chestDuration","chestSeverity","others","hemoptysis","MoreQuestions","pastCOVID","numberOfPotentialPpl","disorientation","slurredSpeech","wakeUp","htmlFor","CheckBox","id","toggle","RecordAudio","sample1","sample2","sample3","Registration","index","setIndex","onActive","notification","Grommet","minHeight","overflow","bottom","Tabs","activeIndex","flex","Tab","title","FormDown","card","footer","CardExample","favorite","setFavorite","vals","ExpandButton","rest","Icon","FormUp","hoverIndicator","Heading","level","Paragraph","auscultations","Favorite","ShareOption","Collapsible","smokingHistory","Cards","map","prop","Landing","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.b1960eb6.chunk.js","sourcesContent":["import React from 'react'\nimport { Box } from 'grommet';\n\nexport const AppBar = (props) => (\n    <Box\n        tag='header'\n        direction='row'\n        align='center'\n        justify='between'\n        background='brand'\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n        elevation='medium'\n        style={{ zIndex: '1' }}\n        {...props}\n    />\n);","import React from 'react'\nimport { AppBar } from '../utils/utils';\nimport { Box, Button } from 'grommet';\nimport { withRouter } from 'react-router-dom';\n\nclass NavBar extends React.Component {\n    render() {\n        return (\n            <AppBar pad={{ left: 'medium', right: 'small', vertical: 'medium' }}>\n                <Box className=\"logo-nav\" direction=\"row\" background=\"brand\" style={{ cursor: \"hand\" }}>\n                    <><span onClick={() => { this.props.history.push('/') }}>We</span><span onClick={() => { this.props.history.push('/auscultatorySoundAnalysis') }}>-श्वास</span></>\n                </Box>\n                <Button default label=\"Register a Patient\" onClick={() => { this.props.history.push('/auscultatorySoundAnalysis/registration') }} />\n            </AppBar>\n        )\n    }\n}\n\nexport default withRouter(NavBar)\n","import React from 'react';\n\nimport {\n    Grommet as GrommetIcon,\n    FacebookOption,\n    Instagram,\n    Twitter,\n} from 'grommet-icons';\n\nimport { Anchor, Box, Footer, grommet, Grommet, Main, Text } from 'grommet';\n\nconst Media = () => (\n    <Box direction=\"row\" gap=\"xxsmall\" justify=\"center\">\n        <Anchor\n            a11yTitle=\"Share feedback on Github\"\n            href=\"https://www.instagram.com/\"\n            icon={<Instagram color=\"white\" />}\n        />\n        <Anchor\n            a11yTitle=\"Chat with us on Slack\"\n            href=\"https://www.facebook.com/\"\n            icon={<FacebookOption color=\"white\" />}\n        />\n        <Anchor\n            a11yTitle=\"Follow us on Twitter\"\n            href=\"https://twitter.com/\"\n            icon={<Twitter color=\"white\" />}\n        />\n    </Box>\n);\n\nconst Social = () => (\n    <Box>\n        <Footer background=\"brand\" pad=\"small\">\n            <Box direction=\"row\" gap=\"small\">\n                <Anchor textAlign=\"center\" href=\"https://docs.google.com/presentation/d/1hcvVueuLn2wVje5yD4WDm5b7TBJSpLE5D8bz9ckqLrY/edit?usp=sharing\" size=\"xsmall\">\n                    About Us\n                </Anchor>\n                <Text textAlign=\"center\" size=\"xsmall\">\n                    ©Copyright\n                </Text>\n            </Box>\n            <Media />\n            <Box align=\"center\" direction=\"row\" gap=\"xsmall\">\n                <Text alignSelf=\"center\" color=\"white\" size=\"xx-large\" style={{ fontFamily: \"Times New Roman\" }}>\n                    <><span>We</span><span>-श्वास</span></>\n                </Text>\n            </Box>\n        </Footer>\n    </Box>\n);\n\nexport default Social","import React from 'react';\n\nimport { FormClose, StatusGood } from 'grommet-icons';\n\nimport { Box, Button, Grommet, Layer, Text } from 'grommet';\nimport { grommet } from 'grommet/themes';\n\nconst Notification = (props) => {\n    const [open, setOpen] = React.useState(true);\n\n    // const onOpen = () => setOpen(true);\n\n    const onClose = () => { setOpen(undefined); props.setNotification(false) };\n\n    return (\n        <>\n            {open && (\n                <Layer\n                    position=\"top\"\n                    modal={true}\n                    margin={{ vertical: 'medium', horizontal: 'small' }}\n                    onEsc={onClose}\n                    responsive={false}\n                    plain\n                >\n                    <Box\n                        align=\"center\"\n                        direction=\"row\"\n                        gap=\"small\"\n                        justify=\"between\"\n                        round=\"medium\"\n                        elevation=\"medium\"\n                        pad={{ vertical: 'xsmall', horizontal: 'small' }}\n                        background=\"status-ok\"\n                    >\n                        <Box align=\"center\" direction=\"row\" gap=\"xsmall\">\n                            <StatusGood />\n                            <Text>{props.message}</Text>\n                        </Box>\n                        <Button icon={<FormClose />} onClick={onClose} plain />\n                    </Box>\n                </Layer>\n            )}\n        </>\n    );\n};\n\nexport default Notification","import React from 'react';\nimport { css } from 'styled-components';\nimport { Attraction, Car, TreeOption, FormDown } from 'grommet-icons';\nimport { Box, Grommet, Tab, Tabs, Form, FormField, TextInput, MaskedInput, Select, TextArea, Button, RangeInput, CheckBox } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\nimport Notification from '../utils/notification';\n\nconst customTheme = deepMerge(grommet, {\n    global: {\n        colors: {\n            \"custom-dark\": \"#282c34\",\n            \"brand\": \"#002011\"\n        },\n        font: {\n            family: 'Raleway',\n            size: '18px',\n            height: '20px',\n        },\n    },\n    tab: {\n        color: 'text',\n        active: {\n            background: 'background-back',\n        },\n        hover: {\n            background: 'background-back',\n            color: 'control',\n        },\n        border: {\n            side: 'bottom',\n            color: 'background-back',\n            active: {\n                color: 'border',\n            },\n            hover: {\n                color: 'control',\n            },\n        },\n        pad: 'small',\n        margin: 'none',\n        extend: ({ theme }) => css`\n      border-top-left-radius: ___CSS_0___;\n      border-top-right-radius: ___CSS_1___;\n      font-weight: bold;\n    `,\n    },\n});\n\n\nconst GeneralHistory = (props) => {\n    const defaultValue = {\n        name: '',\n        email: '',\n        sex: '',\n        comorbities: '',\n        age: '',\n        smoking: ''\n    };\n\n    const [value, setValue] = React.useState(defaultValue);\n    return (\n        <Box fill align=\"center\">\n            <Box width=\"large\">\n                <Form\n                    value={value}\n                    onChange={nextValue => {\n                        setValue(nextValue);\n                    }}\n                    onReset={() => setValue(defaultValue)}\n                    onSubmit={event => {\n                        console.log('Submit', event.value, event.touched)\n                        props.nextIndex(1)\n                    }\n                    }\n                >\n                    <FormField label=\"Name\" name=\"name\">\n                        <TextInput name=\"name\" required />\n                    </FormField>\n                    <FormField label=\"Email\" name=\"email\" required>\n                        <MaskedInput\n                            name=\"email\"\n                            mask={[\n                                { regexp: /^[\\w\\-_.]+$/, placeholder: 'example' },\n                                { fixed: '@' },\n                                { regexp: /^[\\w]+$/, placeholder: 'my' },\n                                { fixed: '.' },\n                                { regexp: /^[\\w]+$/, placeholder: 'com' },\n                            ]}\n                        />\n                    </FormField>\n                    <FormField label=\"Sex\" name=\"Sex\">\n                        <Select name=\"sex\" options={['male', 'female', 'other']} required />\n                    </FormField>\n                    <FormField label=\"Age\" name=\"age\" pad>\n                        <TextInput name=\"age\" required type=\"number\" />\n                    </FormField>\n                    <FormField label=\"Smoking History\" name=\"smoking\" pad>\n                        <TextInput name=\"smoking\" required type=\"number\" />\n                    </FormField>\n                    <FormField label=\"Any other co-morbidities\" name=\"comorbities\">\n                        <TextArea name=\"comorbities\" />\n                    </FormField>\n                    <Box direction=\"row\" justify=\"center\" gap=\"small\" margin={{ top: 'medium' }}>\n                        <Button type=\"reset\" label=\"Reset\" />\n                        <Button type=\"submit\" label=\"Continue\" primary />\n                    </Box>\n                </Form>\n            </Box>\n        </Box >\n    );\n};\n\nconst Vitals = (props) => {\n    const defaultValue = {\n        temperature: '',\n        pulse: '',\n        resprirationRate: '',\n        breathingPattern: '',\n        bloodPressure: '',\n    };\n\n    const [value, setValue] = React.useState(defaultValue);\n    return (\n        <Box fill align=\"center\">\n            <Box width=\"large\">\n                <Form\n                    value={value}\n                    onChange={nextValue => {\n                        setValue(nextValue);\n                    }}\n                    onReset={() => setValue(defaultValue)}\n                    onSubmit={event => {\n                        console.log('Submit', event.value, event.touched)\n                        props.nextIndex(2)\n                    }\n                    }\n                >\n                    <FormField label=\"Temperature\" name=\"temperature\">\n                        <TextInput name=\"temperature\" placeholder=\"37℃\" required />\n                    </FormField>\n                    <FormField label=\"Blood Pressure\" name=\"bloodPressure\" required>\n                        <MaskedInput\n                            name=\"bloodPressure\"\n                            mask={[\n                                { regexp: /^[\\d]+$/, placeholder: '80' },\n                                { fixed: '/' },\n                                { regexp: /^[\\d]+$/, placeholder: '120' },\n                            ]}\n                        />\n                    </FormField>\n                    <FormField label=\"Breathing Pattern\" name=\"breathingPattern\">\n                        <TextInput name=\"breathingPattern\" required />\n                    </FormField>\n                    <FormField label=\"Respiration Rate\" name=\"respirationRate\" pad>\n                        <TextInput name=\"respirationRate\" required type=\"number\" />\n                    </FormField>\n                    <FormField label=\"Pulse\" name=\"pulse\" pad>\n                        <TextInput name=\"pulse\" required type=\"number\" />\n                    </FormField>\n                    <Box direction=\"row\" justify=\"center\" gap=\"small\" margin={{ top: 'medium' }}>\n                        <Button type=\"reset\" label=\"Reset\" />\n                        <Button type=\"submit\" label=\"Continue\" primary />\n                    </Box>\n                </Form>\n            </Box>\n        </Box >\n    );\n};\n\nconst SystemicHistory = (props) => {\n    const defaultValue = {\n        cough: '',\n        sputumConsistency: '',\n        sputumAmount: '',\n        sputumColor: '',\n        sputumSmell: '',\n        sputumPostural: '',\n        blessOnset: '',\n        blessDuration: '',\n        blessSeverity: '',\n        blessVariation: '',\n        chestSite: '',\n        chestOnset: '',\n        chestDuration: '',\n        chestSeverity: '',\n        others: '',\n        hemoptysis: ''\n    };\n\n    const [value, setValue] = React.useState(defaultValue);\n    return (\n        <Box fill align=\"center\">\n            <Box width=\"large\">\n                <Form\n                    value={value}\n                    onChange={nextValue => {\n                        setValue(nextValue);\n                    }}\n                    onReset={() => setValue(defaultValue)}\n                    onSubmit={event => {\n                        console.log('Submit', event.value, event.touched)\n                        props.nextIndex(3)\n                    }\n                    }\n                >\n                    <FormField label=\"Cough\" name=\"cough\">\n                        <Select name=\"cough\" options={['Acute', 'Sub-Acute', 'Chronic', 'Noctural']} required />\n                    </FormField>\n                    <FormField label=\"Sputum Consistency\" name=\"sputumConsistency\">\n                        <TextInput name=\"sputumConsistency\" required />\n                    </FormField>\n                    <FormField label=\"Sputum Amount\" name=\"sputumAmount\">\n                        <TextInput name=\"sputumAmount\" required />\n                    </FormField>\n                    <FormField label=\"Sputum Color\" name=\"sputumColor\">\n                        <TextInput name=\"sputumColor\" required />\n                    </FormField>\n                    <FormField label=\"Sputum Smell\" name=\"sputumSmell\">\n                        <TextInput name=\"sputumSmell\" required />\n                    </FormField>\n                    <FormField label=\"Sputum Postural Variations\" name=\"sputumPostural\">\n                        <TextInput name=\"sputumPostural\" required />\n                    </FormField>\n                    <FormField label=\"Breathlessness Onset\" name=\"blessOnset\">\n                        <TextInput name=\"blessOnset\" required />\n                    </FormField>\n                    <FormField label=\"Breathlessness Duration\" name=\"blessDuration\">\n                        <TextInput name=\"breathingPattern\" required />\n                    </FormField>\n                    <FormField label=\"Breathlessness Severity\" name=\"blessSeverity\" pad>\n                        <TextInput name=\"blessSeverity\" required />\n                    </FormField>\n                    <FormField label=\"Breathlessness Variation\" name=\"blessVariation\" pad>\n                        <TextInput name=\"blessVariation\" required />\n                    </FormField>\n                    <FormField label=\"Chest Pain Site\" name=\"chestSite\" pad>\n                        <TextInput name=\"chestSite\" required />\n                    </FormField>\n                    <FormField label=\"Chest Pain Onset\" name=\"chestOnset\" pad>\n                        <TextInput name=\"chestOnset\" required />\n                    </FormField>\n                    <FormField label=\"Chest Pain Duration\" name=\"chestDuration\" pad>\n                        <TextInput name=\"chestDuration\" required />\n                    </FormField>\n                    <FormField label=\"Chest Pain Severity\" name=\"chestSeverity\" pad>\n                        <TextInput name=\"chestSeverity\" required />\n                    </FormField>\n                    <FormField label=\"Other observations\" name=\"others\" pad>\n                        <TextArea name=\"others\" />\n                    </FormField>\n                    <FormField label=\"Hemoptysis\" name=\"hemoptysis\">\n                        <Select name=\"hemoptysis\" options={['Frank', 'Spurious', 'Sudo-Hemoptysis']} required />\n                    </FormField>\n                    <Box direction=\"row\" justify=\"center\" gap=\"small\" margin={{ top: 'medium' }}>\n                        <Button type=\"reset\" label=\"Reset\" />\n                        <Button type=\"submit\" label=\"Continue\" primary />\n                    </Box>\n                </Form>\n            </Box>\n        </Box >\n    );\n};\n\nconst MoreQuestions = (props) => {\n    const defaultValue = {\n        pastCOVID: '',\n        numberOfPotentialPpl: '',\n        disorientation: '',\n        slurredSpeech: '',\n        wakeUp: ''\n    };\n\n    const [value, setValue] = React.useState(defaultValue);\n    return (\n        <Box fill align=\"center\">\n            <Box width=\"large\">\n                <Form\n                    value={value}\n                    onChange={nextValue => {\n                        setValue(nextValue);\n                    }}\n                    onReset={() => setValue(defaultValue)}\n                    onSubmit={event => {\n                        console.log('Submit', event.value, event.touched)\n                        props.nextIndex(4)\n                    }\n                    }\n                >\n                    <FormField label=\"Number of qurantined / COVID +ve people in contact\" name=\"numberOfPotentialPpl\" pad>\n                        <TextInput name=\"numberOfPotentialPpl\" required type=\"number\" />\n                    </FormField>\n                    <FormField\n                        align=\"center\"\n                        label=\"Diagnosed With COVID in Past\"\n                        name=\"pastCOVID\"\n                        htmlFor=\"check-box-toggle\"\n                        {...props}\n                    >\n                        <Box pad={{ horizontal: 'small', vertical: 'xsmall' }}>\n                            <CheckBox\n                                id=\"check-box-toggle\"\n                                name=\"pastCOVID\"\n                                toggle\n                            />\n                        </Box>\n                    </FormField>\n                    <FormField\n                        align=\"center\"\n                        label=\"Disorientation\"\n                        name=\"disorientation\"\n                        htmlFor=\"check-box-toggle\"\n                        {...props}\n                    >\n                        <Box pad={{ horizontal: 'small', vertical: 'xsmall' }}>\n                            <CheckBox\n                                id=\"check-box-toggle\"\n                                name=\"disorientation\"\n                                toggle\n                            />\n                        </Box>\n                    </FormField>\n                    <FormField\n                        align=\"center\"\n                        label=\"Slurred Speech\"\n                        name=\"slurredSpeech\"\n                        htmlFor=\"check-box-toggle\"\n                        {...props}\n                    >\n                        <Box pad={{ horizontal: 'small', vertical: 'xsmall' }}>\n                            <CheckBox\n                                id=\"check-box-toggle\"\n                                name=\"slurredSpeech\"\n                                toggle\n                            />\n                        </Box>\n                    </FormField>\n                    <FormField\n                        align=\"center\"\n                        label=\"Difficulty in waking up from sleep\"\n                        name=\"wakeUp\"\n                        htmlFor=\"check-box-toggle\"\n                        {...props}\n                    >\n                        <Box pad={{ horizontal: 'small', vertical: 'xsmall' }}>\n                            <CheckBox\n                                id=\"check-box-toggle\"\n                                name=\"wakeUp\"\n                                toggle\n                            />\n                        </Box>\n                    </FormField>\n                    <Box direction=\"row\" justify=\"center\" gap=\"small\" margin={{ top: 'medium' }}>\n                        <Button type=\"reset\" label=\"Reset\" />\n                        <Button type=\"submit\" label=\"Continue\" primary />\n                    </Box>\n                </Form>\n            </Box>\n        </Box >\n    );\n};\n\nconst RecordAudio = (props) => {\n    const defaultValue = {\n        sample1: '',\n        sample2: '',\n        sample3: ''\n    };\n\n    const [value, setValue] = React.useState(defaultValue);\n    return (\n        <>\n            <Box align=\"center\">\n                <Box width=\"large\" gap=\"medium\">\n                    <Button label=\"Record Sample 1\" />\n                    <Button label=\"Record Sample 2\" />\n                    <Button label=\"Record Sample 3\" />\n                </Box>\n            </Box >\n            <Box direction=\"row\" justify=\"center\" gap=\"small\" margin={{ top: 'medium' }}>\n                <Button type=\"reset\" label=\"Reset\" />\n                <Button type=\"submit\" onClick={() => props.setNotification(true)} label=\"Submit\" primary />\n            </Box>\n        </>\n    );\n};\n\n\nconst Registration = () => {\n    const [index, setIndex] = React.useState()\n    const onActive = nextIndex => setIndex(nextIndex);\n\n    const [notification, setNotification] = React.useState(false)\n\n    return (<Grommet theme={customTheme} background=\"light-1\" style={{ minHeight: \"79vh\" }}>\n        <Box background=\"light-1\" height=\"auto\" style={{ overflow: 'auto' }} margin={{ bottom: \"medium\" }} fill>\n            <Tabs margin=\"none\" activeIndex={index} onActive={onActive} flex>\n                <Tab title=\"General History\" icon={<FormDown />}>\n                    <Box fill pad=\"large\">\n                        <GeneralHistory nextIndex={onActive} />\n                    </Box>\n                </Tab>\n                <Tab title=\"Vitals\" icon={<FormDown />}>\n                    <Box fill pad=\"large\" align=\"center\">\n                        <Vitals nextIndex={onActive} />\n                    </Box>\n                </Tab>\n                <Tab title=\"Systemic History\" icon={<FormDown />}>\n                    <Box fill pad=\"large\" align=\"center\">\n                        <SystemicHistory nextIndex={onActive} />\n                    </Box>\n                </Tab>\n                <Tab title=\"Symptom Check\" icon={<FormDown />}>\n                    <Box fill pad=\"large\" align=\"center\">\n                        <MoreQuestions nextIndex={onActive} />\n                    </Box>\n                </Tab>\n                <Tab title=\"Sounds\" icon={<FormDown />}>\n                    <Box pad=\"large\" align=\"center\">\n                        <RecordAudio setNotification={setNotification} />\n                    </Box>\n                </Tab>\n            </Tabs>\n            {/* {notification && alert(\"Your auscultation samples suggest that you are COVID -ve with a 80% confidence\")} */}\n            {notification && <Notification setNotification={setNotification} message=\"Your auscultation samples suggest that you are COVID -ve with a 80% confidence\" />}\n        </Box>\n    </Grommet>)\n};\n\nexport default Registration\n","import React from 'react';\n\nimport {\n    Anchor,\n    Box,\n    Button,\n    Collapsible,\n    Heading,\n    Grommet,\n    Image,\n    Paragraph,\n    Text,\n} from 'grommet';\n\nimport { FormDown, FormUp, Favorite, ShareOption } from 'grommet-icons';\n\nconst theme = {\n    global: {\n        font: {\n            family: `Raleway, -apple-system,\n         BlinkMacSystemFont, \n         \"Segoe UI\", \n         Roboto`,\n        },\n    },\n    card: {\n        elevation: 'none',\n        background: 'light-2',\n        footer: {\n            pad: 'medium',\n        },\n    },\n};\n\nconst Cards = () => (\n    <Box direction=\"row\" flex=\"true\">\n        {[{\n            name: \"Pratish Khapekar\",\n            email: \"pratishkhapekar@gmail.com\",\n            sex: \"Male\",\n            smokingHistory: \"0\",\n            auscultations: 20\n        }, {\n            name: \"Gaurav Singh\",\n            email: \"gs@gmail.com\",\n            sex: \"Male\",\n            auscultations: 3,\n            smokingHistory: \"10\"\n        }, {\n            name: \"Jane Doe\",\n            email: \"janedoe@gmail.com\",\n            sex: \"Female\",\n            auscultations: 5,\n            smokingHistory: \"2\"\n        }].map(prop => {\n            return <CardExample vals={prop} />\n        })}\n    </Box>\n)\n\nconst CardExample = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [favorite, setFavorite] = React.useState(false);\n\n    const { vals } = props\n\n    const ExpandButton = ({ ...rest }) => {\n        const Icon = open ? FormUp : FormDown;\n        return (\n            <Button\n                hoverIndicator=\"light-2\"\n                icon={<Icon color=\"brand\" />}\n                {...rest}\n            />\n        );\n    };\n    return (\n        <Grommet theme={theme}>\n            <Box pad=\"medium\" align=\"start\">\n                <Box elevation=\"large\" width=\"medium\" style={{ color: \"black\" }}>\n                    <Box pad={{ horizontal: 'medium' }} responsive={false}>\n                        <Heading level=\"3\" margin={{ vertical: 'medium' }}>\n                            {vals.name}\n                        </Heading>\n                        <Paragraph margin={{ top: 'none' }} style={{ color: \"black\" }}>\n                            <em>Latest Result</em>: COVID Positive with 60% confidence<br /><br />\n                            <em>Recorded Auscultations</em>: {vals.auscultations}<br />\n                        </Paragraph>\n                    </Box>\n                    <Box>\n                        <Box direction=\"row\" align=\"center\" gap=\"small\">\n                            <Button\n                                icon={<Favorite color={favorite ? 'red' : undefined} />}\n                                hoverIndicator\n                                onClick={() => {\n                                    setFavorite(!favorite);\n                                }}\n                            />\n                            <Button icon={<ShareOption color=\"plain\" />} hoverIndicator />\n                            <Paragraph>Learn More</Paragraph>\n                            <ExpandButton onClick={() => setOpen(!open)} />\n                        </Box>\n                    </Box>\n                    <Collapsible open={open}>\n                        <Box>\n                            <Text margin=\"medium\" color=\"dark-3\">\n                                Email: {vals.email}<br />\n                                Sex: {vals.sex}<br />\n                                Smoking History: {vals.smokingHistory} pack-years<br />\n                                <Anchor label=\"Get Medical History\" href=\"#\" />\n                            </Text>\n                        </Box>\n                    </Collapsible>\n                </Box>\n            </Box>\n        </Grommet>\n    );\n};\n\nexport default Cards","import React from 'react';\n\nimport {\n    Anchor,\n    Box,\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    Collapsible,\n    Heading,\n    Grommet,\n    Image,\n    Paragraph,\n} from 'grommet';\n\nimport { FormDown, FormUp, Favorite, ShareOption } from 'grommet-icons';\nimport Cards from './cards';\n\nconst theme = {\n    global: {\n        font: {\n            family: `Comic Sans MS, -apple-system,\n         BlinkMacSystemFont, \n         \"Segoe UI\", \n         Roboto`,\n        },\n    },\n    card: {\n        elevation: 'none',\n        background: 'light-2',\n        footer: {\n            pad: 'medium',\n        },\n    },\n};\n\nconst Landing = () => {\n    return (\n        <Box fill style={{ width: \"100%\", textAlign: \"left\", color: \"black\" }} margin=\"medium\">\n            <Heading level=\"1\">Current Patients</Heading>\n            <Cards />\n        </Box>\n    )\n};\n\nexport default Landing\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Grommet, Anchor, Footer, Text } from 'grommet';\nimport NavBar from './components/Navigation';\nimport Social from './components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Registration from './components/Register';\nimport Landing from './components/Landing';\n\nconst theme = {\n  global: {\n    colors: {\n      \"custom-dark\": \"#282c34\",\n      \"brand\": \"#002011\"\n    },\n    font: {\n      family: 'Raleway',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <Grommet theme={theme}>\n      <div className=\"App\">\n        <Router>\n          <header className=\"App-header\">\n            <NavBar />\n          </header>\n          <main>\n            <Route exact path={`/auscultatorySoundAnalysis`} component={Landing} />\n            <Route exact path={`/auscultatorySoundAnalysis/registration`} component={Registration} />\n          </main>\n          <Social />\n        </Router>\n      </div>\n    </Grommet>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}